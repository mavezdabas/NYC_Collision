aggregate(crimeMANHATTAN$NUMBER.OF.PERSONS.KILLED,by = list(Vehicle = crimeMANHATTAN$VEHICLE.TYPE.CODE.1), FUN = count)
count(crimeMANHATTAN,c(VEHICLE.TYPE.CODE.1))
count(crimeMANHATTAN,c("VEHICLE.TYPE.CODE.1"))
count(crimeMANHATTAN,c("VEHICLE.TYPE.CODE.1"))
manhattanVehicleType <-
count(crimeMANHATTAN,c('VEHICLE.TYPE.CODE.1'))
count(crimeMANHATTAN,c('VEHICLE.TYPE.CODE.1'))
manhattanVehicleType
xtabs(~ VEHICLE.TYPE.CODE.1, crimeMANHATTAN)
aggregate(~ VEHICLE.TYPE.CODE.1, crimeMANHATTAN)
aggregate(~ VEHICLE.TYPE.CODE.1, crimeMANHATTAN,FUN = length)
aggregate(x~ VEHICLE.TYPE.CODE.1, crimeMANHATTAN,FUN = length)
aggregate(~ VEHICLE.TYPE.CODE.1, data = crimeMANHATTAN,FUN = length)
aggregate(VEHICLE.TYPE.CODE.1 ~, data = crimeMANHATTAN,FUN = length)
aggregate(VEHICLE.TYPE.CODE.1 ~ ., data = crimeMANHATTAN,FUN = length)
crimeMANHATTAN %>%
group_by(VEHICLE.TYPE.CODE.1) %>%
summarise(number = n())
arrange(crimeMANHATTAN %>%
group_by(VEHICLE.TYPE.CODE.1) %>%
summarise(number = n()),-number)
manhattanVehicleType <- head(arrange(crimeMANHATTAN %>%
group_by(VEHICLE.TYPE.CODE.1) %>%
summarise(number = n()),-number),n =10)
View(manhattanVehicleType)
View(topTenFactor)
manhattanVehicleType <- head(arrange(crimeMANHATTAN %>%
group_by(VEHICLE.TYPE.CODE.1, CONTRIBUTING.FACTOR.VEHICLE.2) %>%
summarise(number = n()),-number),n =10)
manhattanVehicleType <- head(arrange(crimeMANHATTAN %>%
group_by(VEHICLE.TYPE.CODE.1) %>%
summarise(number = n()),-number),n =10)
crimeMANHATTAN %>%
dplyr::filter(VEHICLE.TYPE.CODE.1 == "TAXI") %>%
dplyr::group_by(CONTRIBUTING.FACTOR.VEHICLE.1)
crimeMANHATTAN %>%
dplyr::filter(VEHICLE.TYPE.CODE.1 == "TAXI") %>%
dplyr::group_by(CONTRIBUTING.FACTOR.VEHICLE.1) %>%
summarise(number = n())
manhattanTAXI <- crimeMANHATTAN %>%
dplyr::filter(VEHICLE.TYPE.CODE.1 == "TAXI") %>%
dplyr::group_by(CONTRIBUTING.FACTOR.VEHICLE.1) %>%
summarise(number = n())
View(manhattanTAXI)
arrange(crimeMANHATTAN %>%
dplyr::filter(VEHICLE.TYPE.CODE.1 == "TAXI") %>%
dplyr::group_by(CONTRIBUTING.FACTOR.VEHICLE.1) %>%
summarise(number = n()),-number)
manhattanTAXI <- arrange(crimeMANHATTAN %>%
dplyr::filter(VEHICLE.TYPE.CODE.1 == "TAXI") %>%
dplyr::group_by(CONTRIBUTING.FACTOR.VEHICLE.1) %>%
summarise(number = n()),-number)
manhattanTAXI <- head(arrange(crimeMANHATTAN %>%
dplyr::filter(VEHICLE.TYPE.CODE.1 == "TAXI") %>%
dplyr::group_by(CONTRIBUTING.FACTOR.VEHICLE.1) %>%
summarise(number = n()),-number),n = 10)
install.packages("shinydashboard")
shiny::runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
library(shiny)
library(shinydashboard)
library(httr)
library(dplyr)
library(ggmap)
library(geosphere)
library(data.table)
library(data.table)
library(scales)
library(plotly)
install.packages("plotly")
runApp('App')
library(shiny)
library(shinydashboard)
library(httr)
library(dplyr)
library(plotly)
library(lazyeval)
library(magrittr)
source(./data/loadData.R)
source(../data/loadData.R)
source(/data/loadData.R)
source(data/loadData.R)
setwd("~/Mavez_Personal/NYC_Motot_Vehicle_Collision/App")
source(./data/loadData.R)
source(../data/loadData.R)
source("./data/loadData.R")
library(jsonlite)
library(dplyr)
library(magrittr)
rm(list = ls())
library(jsonlite)
library(dplyr)
library(magrittr)
crimeDataCSV <- as.data.frame(read.csv("./data/NYPD_Motor_Vehicle_Collisions.csv",header = TRUE,na.strings = c("","NA")))
crimeDataCSV <- as.data.frame(read.csv("./data/NYPD_Motor_Vehicle_Collisions.csv",header = TRUE,na.strings = c("","NA")))
source("./data/loadData.R")
source("./scripts/loadData.R")
runApp()
runApp()
runApp()
runApp()
runApp()
View(topTenFactor)
View(topTenStreet)
View(topTenFactor)
View(topTenAreas)
runApp()
runApp()
topTenAreas
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("DT")
library(DT)
runApp()
library(jsonlite)
library(dplyr)
library(magrittr)
# Reading Latest file as JSON
# crimeDataJSON <- fromJSON("https://data.cityofnewyork.us/resource/qiz3-axqb.json")
# Reading data from past CSV files.
# This data is already in the workspace
crimeDataCSV <- as.data.frame(read.csv("./data/NYPD_Motor_Vehicle_Collisions.csv",header = TRUE,na.strings = c("","NA")))
rm(list = ls()
))
rm(list = ls())
library(jsonlite)
library(dplyr)
library(magrittr)
crimeDataCSV <- as.data.frame(read.csv("./data/NYPD_Motor_Vehicle_Collisions.csv",header = TRUE,na.strings = c("","NA")))
crimeDataCSV <- crimeDataCSV %>%
dplyr::filter(CONTRIBUTING.FACTOR.VEHICLE.1 != "Unspecified")
crimeDataCSV$BOROUGH <- as.character(crimeDataCSV$BOROUGH)
crimeDataCSV$ON.STREET.NAME <- as.character(crimeDataCSV$ON.STREET.NAME)
attach(crimeDataCSV)
topTenAreas <- arrange(aggregate(NUMBER.OF.PERSONS.KILLED, by=list(Area=BOROUGH), FUN=sum),-x)
runApp()
crimeDataCSV <- crimeDataCSV %>%
dplyr::filter(CONTRIBUTING.FACTOR.VEHICLE.1 != "Unspecified")
runApp()
runApp()
runApp()
runApp()
colnames(topTenAreas) <- c("Region","Count")
View(topTenAreas)
runApp()
runApp()
View(topTenAreas)
topTenAreas$Region["BROOKLYN"]
topTenAreas$Region
dplyr::filter(topTenAreas,Region == "BROOKLYN")
dplyr::filter(topTenAreas,Region == "BROOKLYN") %>% dplyr::select("Count")
runApp()
runApp('~/Downloads/IoTOpenInnovationLab-master')
install.packages("leaflet")
library(googleCharts)
devtools::install_github("jcheng5/googleCharts",force = TRUE)
library(googleCharts)
library(dplyr)
library(data.table)
library(DT)
library(plotly)
library(mongolite)
install.packages("mongolite")
library(shinyjs)
install.packages("shinyjs")
library(shinyjs)
library(plotly)
library(scales)
library(scales)
library(data.table)
library(geosphere)
install.packages("ggmap")
library(ggmap)
library(dplyr)
library(leaflet)
runApp('~/Downloads/IoTOpenInnovationLab-master')
runApp('~/Downloads/IoTOpenInnovationLab-master')
runApp()
headCrime <- head(crimeDataCSV,n = 1000)
View(headCrime)
headCrime %>%
dplyr::group_by(DATE) %>%
summarise(number = n())
crimeDataCSV %>%
dplyr::group_by(DATE) %>%
summarise(number = n())
timeSeriesCollisions <- crimeDataCSV %>%
dplyr::group_by(DATE) %>%
summarise(number = n())
View(timeSeriesCollisions)
timeSeriesCollisions <- arrange(crimeDataCSV %>%
dplyr::group_by(DATE) %>%
summarise(number = n()),-DATE)
timeSeriesCollisions <- arrange(crimeDataCSV %>%
dplyr::group_by(DATE) %>%
summarise(number = n()),DATE)
View(timeSeriesCollisions)
timeSeriesCollisions[order(as.Date(timeSeriesCollisions$DATE, format="%m/%d/%Y")),]
timeSeriesCollisions <- timeSeriesCollisions[order(as.Date(timeSeriesCollisions$DATE, format="%m/%d/%Y")),]
runApp()
timeSeriesCollisions <- crimeDataCSV %>%
dplyr::group_by(DATE) %>%
summarise(number = n())
timeSeriesCollisions <- timeSeriesCollisions[order(as.Date(timeSeriesCollisions$DATE, format="%m/%d/%Y")),]
rm(timeSeriesCollisions)
runApp()
timeSeriesCollisions <- crimeDataCSV %>%
dplyr::group_by(DATE) %>%
summarise(number = n())
timeSeriesCollisions <- timeSeriesCollisions[order(as.Date(timeSeriesCollisions$DATE, format="%m/%d/%Y")),]
timeSeriesCollisions$DATE
runApp()
typeof(timeSeriesCollisions$DATE)
as.Date(timeSeriesCollisions$DATE)
as.Date.character(timeSeriesCollisions$DATE)
as.POSIXct(timeSeriesCollisions$DATE, origin = "1970-01-01", tz = "UTC")
timeSeriesCollisions$DATE
as.character(timeSeriesCollisions$DATE)
as.POSIXct(as.character(timeSeriesCollisions$DATE), origin = "1970-01-01", tz = "UTC")
as.Date(timeSeriesCollisions$DATE)
as.Date(timeSeriesCollisions$DATE,format='%m/%d/%Y')
timeSeriesCollisions$DATE
as.Date(timeSeriesCollisions$DATE,format='%m/%d/%Y')
timeSeriesCollisions$DATE <- as.Date(timeSeriesCollisions$DATE,format='%m/%d/%Y')
rm(timeSeriesCollisions)
runApp()
timeSeriesCollisions <- crimeDataCSV %>%
dplyr::group_by(DATE) %>%
summarise(number = n())
timeSeriesCollisions <- timeSeriesCollisions[order(as.Date(timeSeriesCollisions$DATE, format="%m/%d/%Y")),]
timeSeriesCollisions$DATE <- as.Date(timeSeriesCollisions$DATE,format='%m/%d/%Y')
View(timeSeriesCollisions)
View(timeSeriesCollisions %>%
dplyr::filter(DATE >= "2016-01-01" && DATE <= "2016-12-31"))
View(timeSeriesCollisions %>%
dplyr::filter(DATE >= "2016-01-01"))
View(timeSeriesCollisions %>%
dplyr::filter(DATE >= "2016-01-01") && DATE <= "2016-12-31")
View(timeSeriesCollisions %>%
dplyr::filter(DATE >= "2016-01-01" && DATE <= "2016-12-30"))
View(timeSeriesCollisions %>%
dplyr::filter(DATE >= "2016-04-27" && DATE < "2016-07-27"))
runApp()
View(timeSeriesCollisions)
substring(timeSeriesCollisions$DATE,1,4)
timeSeriesCollisions$Year <- substring(timeSeriesCollisions$DATE,1,4)
runApp()
?args
timeSeriesCollisions$Year <- substring(timeSeriesCollisions$DATE,1,4)
timeSeriesCollisions$Year == "2012"
dplyr::filter(timeSeriesCollisions$Year == "2012")
dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2012")
runApp()
runApp()
collision2012 <- dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2012")
dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2012")
View(timeSeriesCollisions)
timeSeriesCollisions$Year <- substring(timeSeriesCollisions$DATE,1,4)
dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2012")
collision2012 <- dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2012")
collision2013 <- dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2013")
collision2014 <- dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2014")
collision2015 <- dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2015")
collision2016 <- dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2016")
collision2017 <- dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2017")
runApp()
dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2012")
View(timeSeriesCollisions)
timeSeriesCollisions$Year <- substring(timeSeriesCollisions$DATE,1,4)
dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2012")
select(dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2012"),3)
select(dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2012"),1)
select(dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2012"),number)
select(dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2012"),number)
runApp()
runApp()
rm(timeSeriesCollisions)
timeSeriesCollisions <- crimeDataCSV %>%
dplyr::group_by(DATE) %>%
summarise(number = n())
timeSeriesCollisions <- timeSeriesCollisions[order(as.Date(timeSeriesCollisions$DATE, format="%m/%d/%Y")),]
timeSeriesCollisions$DATE <- as.Date(timeSeriesCollisions$DATE,format='%m/%d/%Y')
timeSeriesCollisions$Year <- substring(timeSeriesCollisions$DATE,1,4)
collision2012 <- dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2012")
collision2013 <- dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2013")
collision2014 <- dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2014")
collision2015 <- dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2015")
collision2016 <- dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2016")
collision2017 <- dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2017")
runApp()
timeSeriesCollisions <- crimeDataCSV %>%
dplyr::group_by(DATE) %>%
summarise(number = n())
View(timeSeriesCollisions)
timeSeriesCollisions <- timeSeriesCollisions[order(as.Date(timeSeriesCollisions$DATE, format="%m/%d/%Y")),]
timeSeriesCollisions$DATE <- as.Date(timeSeriesCollisions$DATE,format='%m/%d/%Y')
timeSeriesCollisions$Year <- substring(timeSeriesCollisions$DATE,1,4)
collision2012 <- dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2012")
collision2013 <- dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2013")
collision2014 <- dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2014")
collision2015 <- dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2015")
collision2016 <- dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2016")
collision2017 <- dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2017")
runApp()
select(dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2012"),1)
timeSeriesCollisions$Year <- substring(timeSeriesCollisions$DATE,1,4)
select(dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2012"),1)
runApp()
collision2017
View(collision2017)
runApp()
select(dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2012"),1))
select(dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2012"),1)
runApp()
runApp()
runApp('~/Downloads/IoTOpenInnovationLab-master')
runApp('~/Downloads/IoTOpenInnovationLab-master')
runApp('~/Downloads/IoTOpenInnovationLab-master')
runApp()
runApp('~/Downloads/IoTOpenInnovationLab-master')
runApp()
View(collision2012)
runApp()
rm(collision2012,collision2013,collision2014,collision2015,collision2016,collision2017)
rm(headCrime)
rm(timeSeriesCollisions)
rm(topTenAreas)
crimeDataCSV[order(as.Date(crimeDataCSV$DATE, format="%m/%d/%Y")),]
crimeDataCSV <- crimeDataCSV[order(as.Date(crimeDataCSV$DATE, format="%m/%d/%Y")),]
crimeDataCSV$DATE <- as.Date(crimeDataCSV$DATE,format='%m/%d/%Y')
crimeDataCSV$Year <- substring(crimeDataCSV$DATE,1,4)
View(crimeDataCSV)
crimeDataCSV %>%
dplyr::group_by(DATE) %>%
summarise(number = n())
crimeDataCSV %>%
dplyr::group_by(Year) %>%
summarise(number = n())
aggregateCollisionYear <- crimeDataCSV %>%
dplyr::group_by(Year) %>%
summarise(number = n())
dplyr::filter(aggregateCollisionYear,aggregateCollisionYear$Year == "2012") %>% dplyr::select(2)
runApp()
View(aggregateCollisionYear)
nrow(crimeDataCSV)
runApp()
dplyr::filter(aggregateCollisionYear,aggregateCollisionYear$Year == "2012") %>% dplyr::select(number)
dplyr::filter(aggregateCollisionYear,aggregateCollisionYear$Year == "2012") %>% dplyr::select(number)[1]
dplyr::filter(aggregateCollisionYear,aggregateCollisionYear$Year == "2012") %>% dplyr::select(number)[0]
dplyr::filter(aggregateCollisionYear,aggregateCollisionYear$Year == "2012")
dplyr::filter(aggregateCollisionYear,aggregateCollisionYear$Year == "2012")$number
runApp()
collisionVB
rm(aggregateCollisionYear)
rm(list = ls())
runApp()
View(crimeDataCSV)
runApp()
runApp()
crimeDataCSV %>%
dplyr::group_by(DATE) %>%
summarise(number = n())
crimeDataCSV %>%
dplyr::group_by(DATE,Year) %>%
summarise(number = n())
runApp()
timeSeriesCollisions <- crimeDataCSV %>%
dplyr::group_by(DATE,Year) %>%
summarise(number = n())
View(timeSeriesCollisions)
dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2012")
dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2012")
timeSeriesCollisions$Year == "2012"
dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2012")
dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2012")
dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == 2012)
dplyr::filter(timeSeriesCollisions,timeSeriesCollisions$Year == "2012")
timeSeriesCollisions %>% filter(Year == "2012")
timeSeriesCollisions %>% filter(Year == "2016")
runApp()
yearLineChartDF <- timeSeriesCollisions %>% filter(Year == "2012")
yearLineChartDF
plot_ly(yearLineChartDF,x  = ~DATE, y = ~number,type = "scatter",mode = 'lines', name = "A", visible = T)
plot_ly(yearLineChartDF,x  = DATE, y = ~number,type = "scatter",mode = 'lines', name = "A", visible = T)
plot_ly(yearLineChartDF,x  = ~yearLineChartDF$DATE, y = ~yearLineChartDF$number,type = "scatter",mode = 'lines', name = "A", visible = T)
plot_ly(yearLineChartDF,x  = ~DATE, y = ~number)
plot_ly(yearLineChartDF,x  = ~DATE, y = ~number,type = "scatter",mode = 'lines')
plot_ly(yearLineChartDF,x  = ~DATE, y = ~number,mode = 'lines', name = "A", visible = T)
plot_ly(yearLineChartDF,x  = ~DATE, y = ~number,type = "lines", name = "A", visible = T)
plot_ly(yearLineChartDF,x  = ~DATE, y = ~number,type = "scatter",mode = 'lines')
timeSeriesCollisions %>% filter(Year == "2012")
yearLineChartDF <- timeSeriesCollisions %>% filter(Year == "2012") %>% select(DATE,number)
plot_ly(yearLineChartDF,x  = ~DATE, y = ~number,type = "scatter",mode = 'lines', name = "A", visible = T)
plot_ly(yearLineChartDF,x  = ~DATE, y = ~number,type = "scatter")
plot_ly(yearLineChartDF,x  = ~DATE, y = ~number,type = "scatter",mode = 'lines')
timeSeriesCollisions %>% filter(Year == "2012") %>% select(DATE,number)
plot_ly(yearLineChartDF,x  = ~DATE, y = ~number)
plot_ly(yearLineChartDF,x  = ~DATE, y = ~number,mode = "lines")
plot_ly(yearLineChartDF,x  = ~DATE, y = ~number,type = "scatter")
plot_ly(yearLineChartDF,x  = ~DATE, y = ~number,type = "lines")
plot_ly(yearLineChartDF,x  = ~DATE, y = ~number,type = "area")
plot_ly(yearLineChartDF,x  = ~DATE, y = ~number,type = "area",mode = 'lines', name = "A", visible = T)
runApp()
aggregate(NUMBER.OF.PERSONS.KILLED, by = list(Year), FUN = sum)
aggregate(Year = NUMBER.OF.PERSONS.KILLED, by = list(Year), FUN = sum)
setNames(aggregate(NUMBER.OF.PERSONS.KILLED, by = list(Year), FUN = sum),c("Year","Death"))
setNames(aggregate(NUMBER.OF.PERSONS.KILLED, by = list(Year), FUN = sum),c("Year","Death"))$Death
sum(setNames(aggregate(NUMBER.OF.PERSONS.KILLED, by = list(Year), FUN = sum),c("Year","Death"))$Death)
yearCasualityDF <- setNames(aggregate(NUMBER.OF.PERSONS.KILLED, by = list(Year), FUN = sum),c("Year","Death"))
sum(yearCasualityDF$Death)
runApp()
setNames(aggregate(crimeDataCSV$NUMBER.OF.PEDESTRIANS.KILLED, by = list(Year), FUN = sum),c("Year","Death"))
sum(setNames(aggregate(crimeDataCSV$NUMBER.OF.PEDESTRIANS.KILLED, by = list(Year), FUN = sum),c("Year","Death")))
runApp()
runApp()
rm(timeSeriesCollisions)
rm(yearCasualityDF,yearLineChartDF)
as.data.frame(plyr::count(crimeDataCSV,"CONTRIBUTING.FACTOR.VEHICLE.1"))
crimeDataCSV %>%
dplyr::filter(Year = "2012") %>%
as.data.frame(plyr::count(crimeDataCSV,"CONTRIBUTING.FACTOR.VEHICLE.1"))
crimeDataCSV %>%
dplyr::filter(Year == "2012") %>%
as.data.frame(plyr::count(crimeDataCSV,"CONTRIBUTING.FACTOR.VEHICLE.1"))
crimeDataCSV %>%
dplyr::filter(Year == "2012") %>%
plyr::count(crimeDataCSV,"CONTRIBUTING.FACTOR.VEHICLE.1")
crimeDataCSV %>%
dplyr::filter(Year == "2012")
crimeDataCSV %>%
dplyr::filter(Year == "2012") %>%
dplyr::group_by(CONTRIBUTING.FACTOR.VEHICLE.1)
crimeDataCSV %>%
dplyr::filter(Year == "2012") %>%
dplyr::group_by(CONTRIBUTING.FACTOR.VEHICLE.1) %>%
summarise(number = n())
crimeDataCSV %>%
dplyr::filter(Year == "2012") %>%
dplyr::group_by(CONTRIBUTING.FACTOR.VEHICLE.1) %>%
summarise(Factor = n())
topTenFactor <- crimeDataCSV %>%
dplyr::filter(Year == "2012") %>%
dplyr::group_by(CONTRIBUTING.FACTOR.VEHICLE.1) %>%
summarise(Factor = n())
head(topTenFactor[order(-topTenFactor$Factor),],n = 10)
rm(topTenFactor)
crimeDataCSV %>%
dplyr::group_by(CONTRIBUTING.FACTOR.VEHICLE.1) %>%
summarise(Factor = n())
topTenFactorDF <- crimeDataCSV %>%
dplyr::filter(Year == "2012") %>%
dplyr::group_by(CONTRIBUTING.FACTOR.VEHICLE.1) %>%
summarise(Factor = n())
topTenFactorDF <- head(topTenFactorDF[order(-topTenFactorDF$Factor),],n = 10)
View(topTenFactorDF)
topTenFactorDF
runApp()
rm(topTenFactorDF)
crimeDataCSV %>%
dplyr::filter(Year == "2012") %>%
dplyr::group_by(CONTRIBUTING.FACTOR.VEHICLE.1) %>%
summarise(Factor = n())
topTenFactorDF <- crimeDataCSV %>%
dplyr::filter(Year == "2012") %>%
dplyr::group_by(CONTRIBUTING.FACTOR.VEHICLE.1) %>%
summarise(Factor = n())
head(topTenFactorDF[order(-topTenFactorDF$Factor),],n = 10)
topTenFactorDF <- crimeDataCSV %>%
dplyr::group_by(CONTRIBUTING.FACTOR.VEHICLE.1) %>%
summarise(Factor = n())
head(topTenFactorDF[order(-topTenFactorDF$Factor),],n = 10)
topTenFactorDF <- head(topTenFactorDF[order(-topTenFactorDF$Factor),],n = 10)
rm(topTenFactorDF)
runApp()
runApp()
topTenFactorDF
topTenFactorDF <- crimeDataCSV %>%
dplyr::group_by(CONTRIBUTING.FACTOR.VEHICLE.1) %>%
summarise(Factor = n())
topTenFactorDF <- head(topTenFactorDF[order(-topTenFactorDF$Factor),],n = 10)
plot_ly(topTenFactorDF, x = ~CONTRIBUTING.FACTOR.VEHICLE.1,
y = ~Factor, type = 'bar', name = 'Top Factors')
runApp()
plot_ly(topTenFactorDF, x = ~CONTRIBUTING.FACTOR.VEHICLE.1,
y = ~Factor, type = 'bar') %>%
layout(
title = "Top 10 Factors for Collision",
xaxis = list(title = "Factor", tickangle = -45)
)
View(topTenFactorDF)
topTenFactorDF$CONTRIBUTING.FACTOR.VEHICLE.1
topTenFactorDF$CONTRIBUTING.FACTOR.VEHICLE.1
View(topTenFactorDF$CONTRIBUTING.FACTOR.VEHICLE.1)
summary(topTenFactorDF$CONTRIBUTING.FACTOR.VEHICLE.1)
factor(topTenFactorDF$CONTRIBUTING.FACTOR.VEHICLE.1)
runApp()
runApp()
factor(topTenFactorDF$CONTRIBUTING.FACTOR.VEHICLE.1)
runApp()
runApp()
rm(list = ls())
runApp()
runApp('~/Mavez_Personal/NYC_Motot_Vehicle_Collision/App')
